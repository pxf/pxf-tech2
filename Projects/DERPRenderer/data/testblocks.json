//////////////////
// tree info
[
  {"blockName" : "PipelineTree",
   "blockType" : "PipelineTree",
   "blockData" : { "root" : "output1" }
  },


  //////////////////
  // block info
  {"blockName" : "auxinput1",
   "blockType" : "AuxComp",
   "blockData" : {"auxType" : "texture",
                  "filepath" : "data/derptest.png",
                  "minfilter" : "nearest"
                 },
   "blockOutput" : [{"name" : "texture1",
                     "type" : "texture"}]
  },
  
  {"blockName" : "auxinput2",
   "blockType" : "AuxComp",
   "blockData" : {"auxType" : "script",
                  "src" : "return ((math.sin(os.clock()) + 1.0) / 2)"
                 },
   "blockOutput" : [{"name" : "script1",
                     "type" : "float"}]
  },
  
  {"blockName" : "postprocess1",
   "blockType" : "Post-Process",
   "blockInput" : [{"block" : "auxinput1", "output" : "texture1"},
                   {"block" : "auxinput2", "output" : "script1"}],
   "blockData" : {"width" : 64,
                  "height" : 64,
                  "shaderVert" : "uniform sampler2D texture1;
                  uniform float script1;
                  void main(void)
                  {
                  	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
                  	gl_TexCoord[0] = gl_MultiTexCoord0;
                  }",
                  "shaderFrag" : "uniform sampler2D texture1;
                  uniform float script1;
                  void main()
                  {
                  	//gl_FragColor = texture2D(texture1, script1*gl_TexCoord[0].st);
                  	gl_FragData[0] = vec4(0.0, 1.0, 0.0, 1.0);//texture2D(texture1, script1*gl_TexCoord[0].st);
                  	gl_FragData[1] = vec4(1.0, 0.0, 0.0, 1.0);
                  }"
                 },
   "blockOutput" : [{"name" : "texture2",
                     "type" : "texture"},
					 {"name" : "texture3",
                     "type" : "texture"}]
  },

  {"blockName" : "output1",
   "blockType" : "Root",
   "blockInput" : [{"block" : "postprocess1", "output" : "texture3"},
                   //{"block" : "auxinput1", "output" : "texture1"},
                   {"block" : "auxinput2", "output" : "script1"}],
   "blockData" : {"host" : "localhost",
                  "port" : "4632",
                  "feedback" : true,
                  "realtime" : false,
                  "shaderVert" : "uniform sampler2D texture3;
                  //uniform sampler2D texture1;
                  uniform float script1;
                  void main(void)
                  {
                  	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
                  	gl_TexCoord[0] = gl_MultiTexCoord0;
                  }",
                  "shaderFrag" : "uniform sampler2D texture3;
                  uniform sampler2D texture1;
                  uniform float script1;
                  void main()
                  {
                    //vec4 aoe = texture2D(texture1, gl_TexCoord[0].st);
                  	gl_FragColor = texture2D(texture3, gl_TexCoord[0].st);
                  }",
                  "width" : 512,
                  "height" : 512
                 }
  }
]