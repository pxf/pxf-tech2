package raytracer;

message DataBlob {
	
	message Vec3f {
		required float x = 1;
		required float y = 2;
		required float z = 3;
	}

	message PrimitiveSphere {
		required Vec3f position = 1;
		required float size = 2;
	}
	
	message PointLight {
		required Vec3f position = 1;
		required int32 material_index = 2;
		optional float constant_attenuation = 3 [default = 2.0];
		optional float linear_attenuation = 4 [default = 1.0];
		optional float quadratic_attenuation = 5 [default = 0.5];
	}
	
	message Camera {
		required Vec3f position = 1;
		required float orient_x = 2;
		required float orient_y = 3;
		required float orient_z = 4;
		required float orient_w = 5;
	}

	message BVH {
		required bytes nodes = 1;
		required int32 num_nodes = 2;
		required bytes index_list = 3;
		required Vec3f minpos = 4;
		required Vec3f maxpos = 5;
	}

	required int32 prim_count = 1;
	required int32 light_count = 2;
	
	repeated float samples = 3;
	
	required int32 bounce_count = 4;
	
	required int32 pic_w = 5;
	required int32 pic_h = 6;
	
	required int32 samples_per_pixel = 7;
	
	required int32 interleaved_feedback = 8;
	
	repeated PrimitiveSphere primitives = 9;
	repeated PointLight lights = 10;
	
	required Camera cam = 11;

	required bytes primitive_data = 12;
	required bytes materials = 13;

	required BVH tree = 14;
}

message Task {
	required int32 id = 1;
	required int32 x = 2;
	required int32 y = 3;
	required int32 w = 4;
	required int32 h = 5;
}

message Result {
	required int32 id = 1;
	required int32 x = 2;
	required int32 y = 3;
	required int32 w = 4;
	required int32 h = 5;
	required bool final = 6;
	required int32 size = 7;
	required bytes data = 8;
}